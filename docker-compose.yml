version: "3.2"

services:
  php:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        APP_ENV: ${APP_ENV}
        XDEBUG_REMOTE_HOST: ${XDEBUG_REMOTE_HOST}
        XDEBUG_REMOTE_ENABLE: ${XDEBUG_REMOTE_ENABLE}
        XDEBUG_REMOTE_AUTOSTART: ${XDEBUG_REMOTE_AUTOSTART}
        XDEBUG_REMOTE_CONNECT_BACK: ${XDEBUG_REMOTE_CONNECT_BACK}
        XDEBUG_IDEKEY: ${XDEBUG_IDEKEY}
        XDEBUG_REMOTE_PORT: ${XDEBUG_REMOTE_PORT}
        XDEBUG_PROFILER_ENABLE: ${XDEBUG_PROFILER_ENABLE}
        XDEBUG_PROFILER_ENABLE_TRIGGER: ${XDEBUG_PROFILER_ENABLE_TRIGGER}
    volumes:
      - .:/var/www/html
    expose:
      - 9000
    environment:
      - PARENT_USER_ID
      - APP_ENV
      - PHP_IDE_CONFIG
    user: "${UID}:${GID}"
    depends_on:
      - db
      - db_test
      - redis
      - rabbitmq
  nginx:
    image: 4xxi/nginx:flex
    depends_on:
      - php
    ports:
      - "${SERVER_HTTP_PORT}:80"
    volumes:
      - .:/var/www/html
      - ./var/log:/var/log/nginx
  db:
    image: "postgres:9"
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - db:/var/lib/postgresql/data
      - ./backup:/home
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
  db_test:
    image: "postgres:9"
    ports:
      - "${TEST_DATABASE_PORT}:5432"
    volumes:
      - db_test:/var/lib/postgresql/data
    environment:
      - COMPOSER_AUTH
      - POSTGRES_DB=${TEST_POSTGRES_DB}
      - POSTGRES_USER=${TEST_POSTGRES_USER}
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
  redis:
    image: "redis:5-alpine"
    environment:
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - 6379:6379
    volumes:
      - "redis:/etc/redis/database/caesarapp"
  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS
      - RABBITMQ_VHOST
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - "rmq:/var/lib/rabbitmq"
  mailhog:
    image: mailhog/mailhog
    ports:
      - "1080:8025"
  mercure:
    image: dunglas/mercure:v0.11
    environment:
      - MERCURE_JWT_SECRET
      - CORS_ALLOW_ORIGIN
    ports:
      - "${MERCURE_EXTERNAL_PORT}:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - ./config/mercure:/config
volumes:
  db:
  db_test:
  caddy_data:
  redis:
  rmq:
