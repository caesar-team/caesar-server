# ---- Base Image ----
FROM php:7.4-fpm-alpine AS base
# Set working directory
WORKDIR /var/www/html
ARG UID=1000
ARG GID=1000
RUN apk --update add \
    build-base \
    autoconf \
    git \
    icu-dev \
    gpgme-dev \
    gpgme \
    libzip-dev \
    postgresql-dev \
    rabbitmq-c \
    rabbitmq-c-dev \
    zip \ 
    shadow \ 
    \
    && docker-php-ext-install -j$(nproc) \
    intl \
    bcmath\
    opcache \
    pdo \
    pdo_pgsql \
    zip \
    sockets \
    \
    && pecl install gnupg redis amqp \
    && docker-php-ext-enable redis amqp \
    \
    && usermod -u $UID www-data

RUN mkdir -p /var/www/html /var/www/html/vendor /var/www/html/public/static /var/www/html/var/cache /var/www/html/var/log /var/www/html/var/sessions /var/www/html/var/jwt \
&& chown -R www-data /var/www/html /var/www/html/vendor /var/www/html/var/cache /var/www/html/var/jwt
# Composer part
COPY --from=composer:1 /usr/bin/composer /usr/bin/composer
ENV COMPOSER_MEMORY_LIMIT -1
# ENV COMPOSER_ALLOW_SUPERUSER 1
RUN composer global require hirak/prestissimo  --prefer-dist --no-progress --no-suggest --optimize-autoloader --no-interaction --no-plugins --no-scripts

# Run in production mode
ENV APP_ENV=prod
# Copy project file
COPY composer.json .
COPY composer.lock .

ARG XDEBUG_REMOTE_HOST=172.17.0.1
ARG XDEBUG_REMOTE_ENABLE=1
ARG XDEBUG_REMOTE_AUTOSTART=1
ARG XDEBUG_REMOTE_CONNECT_BACK=1
ARG XDEBUG_IDEKEY=PHPSTORM
ARG XDEBUG_REMOTE_PORT=9001
ARG XDEBUG_PROFILER_ENABLE=0
ARG XDEBUG_PROFILER_ENABLE_TRIGGER=1

RUN apk add --no-cache --virtual .build-deps $PHPIZE_DEPS coreutils \
   && yes | pecl install xdebug \
   && echo "zend_extension=$(find /usr/local/lib/php/extensions/ -name xdebug.so)" > /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.remote_enable=${XDEBUG_REMOTE_ENABLE}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.remote_autostart=${XDEBUG_REMOTE_AUTOSTART}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.remote_host=${XDEBUG_REMOTE_HOST}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.remote_port=${XDEBUG_REMOTE_PORT}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.remote_connect_back=${XDEBUG_REMOTE_CONNECT_BACK}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.idekey=${XDEBUG_IDEKEY}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.profiler_enable=${XDEBUG_PROFILER_ENABLE}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.profiler_enable_trigger=${XDEBUG_PROFILER_ENABLE_TRIGGER}" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.profiler_output_dir=/var/www/GDL/var/profiler_snapshots" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && echo "xdebug.max_nesting_level=9999" >> /usr/local/etc/php/conf.d/xdebug.ini \
   && apk del .build-deps

## ---- Webpack Encore ----
FROM node:lts-alpine AS yarn-enc
COPY . .
RUN yarn install && yarn encore production

# ---- Release ----
FROM base AS release
WORKDIR /var/www/html
COPY --chown=www-data:www-data src src
COPY --chown=www-data:www-data --from=yarn-enc ./public/build /var/www/html/public/build
COPY ./config/docker/php/symfony.ini /usr/local/etc/php/conf.d
COPY bin/fix-permissions.sh /usr/local/bin/
COPY entrypoint.sh /usr/local/bin/
USER www-data
# expose port and define CMD
EXPOSE 9000
ENTRYPOINT ["entrypoint.sh"]
