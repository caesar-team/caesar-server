# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Fixtures,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Event\EventSubscriber\MigrationEventSubscriber:
        tags:
            - { name: doctrine.event_subscriber, connection: default }

    App\Security\FOSUBUserProvider:
        arguments:
            $properties: { google: googleId}

    App\Security\FrontendUriHandler:
        arguments:
            $validUriCollection: '%frontend_uris%'

    App\Event\EntityListener\FileListener:
        arguments: [ '%kernel.project_dir%' ]
        tags:
        - { name: doctrine.orm.entity_listener }
        - { name: doctrine.orm.entity_listener, entity_manager: custom }

    App\Repository\UserRepository:
        class: Doctrine\ORM\EntityRepository
        factory: ['@doctrine', getRepository]
        arguments: [ 'App\Entity\User' ]

    App\Controller\Admin\UserController:
        arguments:
            $userManager: '@fos_user.user_manager'
